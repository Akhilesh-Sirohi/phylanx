# Copyright (c) 2011 Bryce Lelbach
#
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

macro(_to_string var)
  foreach(_arg ${ARGN})
    string(REPLACE "\\" "/" _arg ${_arg})
    if("${${var}}" STREQUAL "")
      set(${var} "${_arg}")
    else()
      set(${var} "${${var}} ${_arg}")
    endif()
  endforeach()
endmacro()

macro(phylanx_info)
  set(msg)
  _to_string(msg ${ARGN})
  message(STATUS "${msg}")
  unset(args)
endmacro()

macro(phylanx_debug)
  if("${PHYLANX_CMAKE_LOGLEVEL}" MATCHES "DEBUG|debug|Debug")
    set(msg "DEBUG:")
    _to_string(msg ${ARGN})
    message(STATUS "${msg}")
  endif()
endmacro()

macro(phylanx_warn)
  if("${PHYLANX_CMAKE_LOGLEVEL}" MATCHES "DEBUG|debug|Debug|WARN|warn|Warn")
    set(msg "WARNING:")
    _to_string(msg ${ARGN})
    message(STATUS "${msg}")
  endif()
endmacro()

macro(phylanx_error)
  set(msg "ERROR:")
  _to_string(msg ${ARGN})
  message(FATAL_ERROR "${msg}")
endmacro()

macro(phylanx_message level)
  if("${level}" MATCHES "ERROR|error|Error")
    phylanx_error(${ARGN})
  elseif("${level}" MATCHES "WARN|warn|Warn")
    phylanx_warn(${ARGN})
  elseif("${level}" MATCHES "DEBUG|debug|Debug")
    phylanx_debug(${ARGN})
  elseif("${level}" MATCHES "INFO|info|Info")
    phylanx_info(${ARGN})
  else()
    phylanx_error("message" "\"${level}\" is not an Phylanx configuration logging level.")
  endif()
endmacro()

macro(phylanx_config_loglevel level return)
  set(${return} FALSE)
  if(    "${PHYLANX_CMAKE_LOGLEVEL}" MATCHES "ERROR|error|Error"
     AND "${level}" MATCHES "ERROR|error|Error")
    set(${return} TRUE)
  elseif("${PHYLANX_CMAKE_LOGLEVEL}" MATCHES "WARN|warn|Warn"
     AND "${level}" MATCHES "WARN|warn|Warn")
    set(${return} TRUE)
  elseif("${PHYLANX_CMAKE_LOGLEVEL}" MATCHES "DEBUG|debug|Debug"
     AND "${level}" MATCHES "DEBUG|debug|Debug")
    set(${return} TRUE)
  elseif("${PHYLANX_CMAKE_LOGLEVEL}" MATCHES "INFO|info|Info"
     AND "${level}" MATCHES "INFO|info|Info")
    set(${return} TRUE)
  endif()
endmacro()

macro(phylanx_print_list level message list)
  phylanx_config_loglevel(${level} printed)
  if(printed)
    if(${list})
      phylanx_message(${level} "${message}: ")
      foreach(element ${${list}})
        message("    ${element}")
      endforeach()
    else()
      phylanx_message(${level} "${message} is empty.")
    endif()
  endif()
endmacro()

